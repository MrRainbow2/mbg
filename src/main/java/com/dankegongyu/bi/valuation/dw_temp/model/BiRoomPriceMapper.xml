<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dankegongyu.bi.valuation.dw_temp.dao.BiRoomPriceMapper" >
  <resultMap id="BaseResultMap" type="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPrice" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="block" property="block" jdbcType="VARCHAR" />
    <result column="community" property="community" jdbcType="VARCHAR" />
    <result column="suite_id" property="suiteId" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="room_price" property="roomPrice" jdbcType="INTEGER" />
    <result column="adj_room_outprice_pre" property="adjRoomOutpricePre" jdbcType="INTEGER" />
    <result column="room_price_final" property="roomPriceFinal" jdbcType="INTEGER" />
    <result column="xiaoqu_std_price" property="xiaoquStdPrice" jdbcType="INTEGER" />
    <result column="block_std_price" property="blockStdPrice" jdbcType="INTEGER" />
    <result column="price_label" property="priceLabel" jdbcType="VARCHAR" />
    <result column="xiaoqu_std_price_type" property="xiaoquStdPriceType" jdbcType="VARCHAR" />
    <result column="rent_type" property="rentType" jdbcType="VARCHAR" />
    <result column="pdate" property="pdate" jdbcType="DATE" />
    <result column="is_abnormal" property="isAbnormal" jdbcType="INTEGER" />
    <result column="is_first" property="isFirst" jdbcType="INTEGER" />
    <result column="is_sync" property="isSync" jdbcType="INTEGER" />
    <result column="process_status" property="processStatus" jdbcType="INTEGER" />
    <result column="sync_remark" property="syncRemark" jdbcType="VARCHAR" />
    <result column="spread" property="spread" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, city, block, community, suite_id, code, room_price, adj_room_outprice_pre, room_price_final, 
    xiaoqu_std_price, block_std_price, price_label, xiaoqu_std_price_type, rent_type, 
    pdate, is_abnormal, is_first, is_sync, process_status, sync_remark, spread
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPriceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bi_room_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bi_room_price
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bi_room_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPriceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bi_room_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPrice" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into bi_room_price (id, city, block, 
      community, suite_id, code, 
      room_price, adj_room_outprice_pre, room_price_final, 
      xiaoqu_std_price, block_std_price, price_label, 
      xiaoqu_std_price_type, rent_type, pdate, 
      is_abnormal, is_first, is_sync, 
      process_status, sync_remark, spread
      )
    values (#{id,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{block,jdbcType=VARCHAR}, 
      #{community,jdbcType=VARCHAR}, #{suiteId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{roomPrice,jdbcType=INTEGER}, #{adjRoomOutpricePre,jdbcType=INTEGER}, #{roomPriceFinal,jdbcType=INTEGER}, 
      #{xiaoquStdPrice,jdbcType=INTEGER}, #{blockStdPrice,jdbcType=INTEGER}, #{priceLabel,jdbcType=VARCHAR}, 
      #{xiaoquStdPriceType,jdbcType=VARCHAR}, #{rentType,jdbcType=VARCHAR}, #{pdate,jdbcType=DATE}, 
      #{isAbnormal,jdbcType=INTEGER}, #{isFirst,jdbcType=INTEGER}, #{isSync,jdbcType=INTEGER}, 
      #{processStatus,jdbcType=INTEGER}, #{syncRemark,jdbcType=VARCHAR}, #{spread,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPrice" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into bi_room_price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="block != null" >
        block,
      </if>
      <if test="community != null" >
        community,
      </if>
      <if test="suiteId != null" >
        suite_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="roomPrice != null" >
        room_price,
      </if>
      <if test="adjRoomOutpricePre != null" >
        adj_room_outprice_pre,
      </if>
      <if test="roomPriceFinal != null" >
        room_price_final,
      </if>
      <if test="xiaoquStdPrice != null" >
        xiaoqu_std_price,
      </if>
      <if test="blockStdPrice != null" >
        block_std_price,
      </if>
      <if test="priceLabel != null" >
        price_label,
      </if>
      <if test="xiaoquStdPriceType != null" >
        xiaoqu_std_price_type,
      </if>
      <if test="rentType != null" >
        rent_type,
      </if>
      <if test="pdate != null" >
        pdate,
      </if>
      <if test="isAbnormal != null" >
        is_abnormal,
      </if>
      <if test="isFirst != null" >
        is_first,
      </if>
      <if test="isSync != null" >
        is_sync,
      </if>
      <if test="processStatus != null" >
        process_status,
      </if>
      <if test="syncRemark != null" >
        sync_remark,
      </if>
      <if test="spread != null" >
        spread,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="block != null" >
        #{block,jdbcType=VARCHAR},
      </if>
      <if test="community != null" >
        #{community,jdbcType=VARCHAR},
      </if>
      <if test="suiteId != null" >
        #{suiteId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="roomPrice != null" >
        #{roomPrice,jdbcType=INTEGER},
      </if>
      <if test="adjRoomOutpricePre != null" >
        #{adjRoomOutpricePre,jdbcType=INTEGER},
      </if>
      <if test="roomPriceFinal != null" >
        #{roomPriceFinal,jdbcType=INTEGER},
      </if>
      <if test="xiaoquStdPrice != null" >
        #{xiaoquStdPrice,jdbcType=INTEGER},
      </if>
      <if test="blockStdPrice != null" >
        #{blockStdPrice,jdbcType=INTEGER},
      </if>
      <if test="priceLabel != null" >
        #{priceLabel,jdbcType=VARCHAR},
      </if>
      <if test="xiaoquStdPriceType != null" >
        #{xiaoquStdPriceType,jdbcType=VARCHAR},
      </if>
      <if test="rentType != null" >
        #{rentType,jdbcType=VARCHAR},
      </if>
      <if test="pdate != null" >
        #{pdate,jdbcType=DATE},
      </if>
      <if test="isAbnormal != null" >
        #{isAbnormal,jdbcType=INTEGER},
      </if>
      <if test="isFirst != null" >
        #{isFirst,jdbcType=INTEGER},
      </if>
      <if test="isSync != null" >
        #{isSync,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null" >
        #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="syncRemark != null" >
        #{syncRemark,jdbcType=VARCHAR},
      </if>
      <if test="spread != null" >
        #{spread,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPriceExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bi_room_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bi_room_price
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.block != null" >
        block = #{record.block,jdbcType=VARCHAR},
      </if>
      <if test="record.community != null" >
        community = #{record.community,jdbcType=VARCHAR},
      </if>
      <if test="record.suiteId != null" >
        suite_id = #{record.suiteId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.roomPrice != null" >
        room_price = #{record.roomPrice,jdbcType=INTEGER},
      </if>
      <if test="record.adjRoomOutpricePre != null" >
        adj_room_outprice_pre = #{record.adjRoomOutpricePre,jdbcType=INTEGER},
      </if>
      <if test="record.roomPriceFinal != null" >
        room_price_final = #{record.roomPriceFinal,jdbcType=INTEGER},
      </if>
      <if test="record.xiaoquStdPrice != null" >
        xiaoqu_std_price = #{record.xiaoquStdPrice,jdbcType=INTEGER},
      </if>
      <if test="record.blockStdPrice != null" >
        block_std_price = #{record.blockStdPrice,jdbcType=INTEGER},
      </if>
      <if test="record.priceLabel != null" >
        price_label = #{record.priceLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.xiaoquStdPriceType != null" >
        xiaoqu_std_price_type = #{record.xiaoquStdPriceType,jdbcType=VARCHAR},
      </if>
      <if test="record.rentType != null" >
        rent_type = #{record.rentType,jdbcType=VARCHAR},
      </if>
      <if test="record.pdate != null" >
        pdate = #{record.pdate,jdbcType=DATE},
      </if>
      <if test="record.isAbnormal != null" >
        is_abnormal = #{record.isAbnormal,jdbcType=INTEGER},
      </if>
      <if test="record.isFirst != null" >
        is_first = #{record.isFirst,jdbcType=INTEGER},
      </if>
      <if test="record.isSync != null" >
        is_sync = #{record.isSync,jdbcType=INTEGER},
      </if>
      <if test="record.processStatus != null" >
        process_status = #{record.processStatus,jdbcType=INTEGER},
      </if>
      <if test="record.syncRemark != null" >
        sync_remark = #{record.syncRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.spread != null" >
        spread = #{record.spread,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bi_room_price
    set id = #{record.id,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      block = #{record.block,jdbcType=VARCHAR},
      community = #{record.community,jdbcType=VARCHAR},
      suite_id = #{record.suiteId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      room_price = #{record.roomPrice,jdbcType=INTEGER},
      adj_room_outprice_pre = #{record.adjRoomOutpricePre,jdbcType=INTEGER},
      room_price_final = #{record.roomPriceFinal,jdbcType=INTEGER},
      xiaoqu_std_price = #{record.xiaoquStdPrice,jdbcType=INTEGER},
      block_std_price = #{record.blockStdPrice,jdbcType=INTEGER},
      price_label = #{record.priceLabel,jdbcType=VARCHAR},
      xiaoqu_std_price_type = #{record.xiaoquStdPriceType,jdbcType=VARCHAR},
      rent_type = #{record.rentType,jdbcType=VARCHAR},
      pdate = #{record.pdate,jdbcType=DATE},
      is_abnormal = #{record.isAbnormal,jdbcType=INTEGER},
      is_first = #{record.isFirst,jdbcType=INTEGER},
      is_sync = #{record.isSync,jdbcType=INTEGER},
      process_status = #{record.processStatus,jdbcType=INTEGER},
      sync_remark = #{record.syncRemark,jdbcType=VARCHAR},
      spread = #{record.spread,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPrice" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bi_room_price
    <set >
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="block != null" >
        block = #{block,jdbcType=VARCHAR},
      </if>
      <if test="community != null" >
        community = #{community,jdbcType=VARCHAR},
      </if>
      <if test="suiteId != null" >
        suite_id = #{suiteId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="roomPrice != null" >
        room_price = #{roomPrice,jdbcType=INTEGER},
      </if>
      <if test="adjRoomOutpricePre != null" >
        adj_room_outprice_pre = #{adjRoomOutpricePre,jdbcType=INTEGER},
      </if>
      <if test="roomPriceFinal != null" >
        room_price_final = #{roomPriceFinal,jdbcType=INTEGER},
      </if>
      <if test="xiaoquStdPrice != null" >
        xiaoqu_std_price = #{xiaoquStdPrice,jdbcType=INTEGER},
      </if>
      <if test="blockStdPrice != null" >
        block_std_price = #{blockStdPrice,jdbcType=INTEGER},
      </if>
      <if test="priceLabel != null" >
        price_label = #{priceLabel,jdbcType=VARCHAR},
      </if>
      <if test="xiaoquStdPriceType != null" >
        xiaoqu_std_price_type = #{xiaoquStdPriceType,jdbcType=VARCHAR},
      </if>
      <if test="rentType != null" >
        rent_type = #{rentType,jdbcType=VARCHAR},
      </if>
      <if test="pdate != null" >
        pdate = #{pdate,jdbcType=DATE},
      </if>
      <if test="isAbnormal != null" >
        is_abnormal = #{isAbnormal,jdbcType=INTEGER},
      </if>
      <if test="isFirst != null" >
        is_first = #{isFirst,jdbcType=INTEGER},
      </if>
      <if test="isSync != null" >
        is_sync = #{isSync,jdbcType=INTEGER},
      </if>
      <if test="processStatus != null" >
        process_status = #{processStatus,jdbcType=INTEGER},
      </if>
      <if test="syncRemark != null" >
        sync_remark = #{syncRemark,jdbcType=VARCHAR},
      </if>
      <if test="spread != null" >
        spread = #{spread,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dankegongyu.bi.valuation.dw_temp.model.BiRoomPrice" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bi_room_price
    set city = #{city,jdbcType=VARCHAR},
      block = #{block,jdbcType=VARCHAR},
      community = #{community,jdbcType=VARCHAR},
      suite_id = #{suiteId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      room_price = #{roomPrice,jdbcType=INTEGER},
      adj_room_outprice_pre = #{adjRoomOutpricePre,jdbcType=INTEGER},
      room_price_final = #{roomPriceFinal,jdbcType=INTEGER},
      xiaoqu_std_price = #{xiaoquStdPrice,jdbcType=INTEGER},
      block_std_price = #{blockStdPrice,jdbcType=INTEGER},
      price_label = #{priceLabel,jdbcType=VARCHAR},
      xiaoqu_std_price_type = #{xiaoquStdPriceType,jdbcType=VARCHAR},
      rent_type = #{rentType,jdbcType=VARCHAR},
      pdate = #{pdate,jdbcType=DATE},
      is_abnormal = #{isAbnormal,jdbcType=INTEGER},
      is_first = #{isFirst,jdbcType=INTEGER},
      is_sync = #{isSync,jdbcType=INTEGER},
      process_status = #{processStatus,jdbcType=INTEGER},
      sync_remark = #{syncRemark,jdbcType=VARCHAR},
      spread = #{spread,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>